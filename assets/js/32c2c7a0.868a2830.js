"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[489],{4137:(e,t,a)=>{a.d(t,{Zo:()=>c,kt:()=>m});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function p(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),s=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},c=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(a),b=n,m=u["".concat(l,".").concat(b)]||u[b]||d[b]||o;return a?r.createElement(m,i(i({ref:t},c),{},{components:a})):r.createElement(m,i({ref:t},c))}));function m(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=b;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:n,i[1]=p;for(var s=2;s<o;s++)i[s]=a[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}b.displayName="MDXCreateElement"},7096:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>p,toc:()=>s});var r=a(7462),n=(a(7294),a(4137));const o={sidebar_position:3},i="Build an App using the Realm SDK to store data locally",p={unversionedId:"prerequisites/build_app_workshop",id:"prerequisites/build_app_workshop",title:"Build an App using the Realm SDK to store data locally",description:"This lab is based on the SwiftUI Atlas Device SDK App Lab where we build a simple habit-tracking app using SwiftUI and the Atlas Device SDK (formerly known as Realm SDK). This app stores data locally and our objective now is to add Atlas Device Sync to that app.",source:"@site/docs/0-prerequisites/build_app_workshop.mdx",sourceDirName:"0-prerequisites",slug:"/prerequisites/build_app_workshop",permalink:"/swiftui-atlas-sync-app-lab/docs/prerequisites/build_app_workshop",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-sync-app-lab/blob/main/docs/0-prerequisites/build_app_workshop.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Xcode 14",permalink:"/swiftui-atlas-sync-app-lab/docs/prerequisites/xcode"},next:{title:"MongoDB Atlas",permalink:"/swiftui-atlas-sync-app-lab/docs/category/mongodb-atlas"}},l={},s=[],c={toc:s},u="wrapper";function d(e){let{components:t,...a}=e;return(0,n.kt)(u,(0,r.Z)({},c,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"build-an-app-using-the-realm-sdk-to-store-data-locally"},"Build an App using the Realm SDK to store data locally"),(0,n.kt)("p",null,"This lab is based on the ",(0,n.kt)("a",{parentName:"p",href:"https://mongodb-developer.github.io/swiftui-atlas-device-sdk-app-lab/"},"SwiftUI Atlas Device SDK App Lab")," where we build a simple habit-tracking app using SwiftUI and the Atlas Device SDK (formerly known as Realm SDK). This app stores data locally and our objective now is to add Atlas Device Sync to that app. "),(0,n.kt)("p",null,"You can either:"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},"follow the lab "),(0,n.kt)("li",{parentName:"ul"},"grab the code cloning the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab"},"repo")," and navigating to the ",(0,n.kt)("a",{parentName:"li",href:"https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab/tree/main/GoodHabitsRealmApp"},"GoodHabitsRealmApp")," folder.")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/mongodb-developer/swiftui-atlas-device-sdk-app-lab\ncd GoodHabitsRealmApp\nopen GoodHabitsRealmApp.xccodeproj\n")),(0,n.kt)("p",null,"And then compiling the App in Xcode."))}d.isMDXComponent=!0}}]);