"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[489],{4137:(e,t,r)=>{r.d(t,{Zo:()=>c,kt:()=>h});var o=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function p(e,t){if(null==e)return{};var r,o,a=function(e,t){if(null==e)return{};var r,o,a={},n=Object.keys(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(o=0;o<n.length;o++)r=n[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=o.createContext({}),s=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},c=function(e){var t=s(e.components);return o.createElement(l.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=s(r),m=a,h=u["".concat(l,".").concat(m)]||u[m]||d[m]||n;return r?o.createElement(h,i(i({ref:t},c),{},{components:r})):o.createElement(h,i({ref:t},c))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,i=new Array(n);i[0]=m;var p={};for(var l in t)hasOwnProperty.call(t,l)&&(p[l]=t[l]);p.originalType=e,p[u]="string"==typeof e?e:a,i[1]=p;for(var s=2;s<n;s++)i[s]=r[s];return o.createElement.apply(null,i)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},7096:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>n,metadata:()=>p,toc:()=>s});var o=r(7462),a=(r(7294),r(4137));const n={sidebar_position:3},i="Build an App using the Realm SDK to store data locally",p={unversionedId:"prerequisites/build_app_workshop",id:"prerequisites/build_app_workshop",title:"Build an App using the Realm SDK to store data locally",description:"This lab is based on the SwiftUI Realm App Workshop where we build a simple habit-tracking app using SwiftUI and the Realm SDK. This app stores data locally and our objective now is to add Atlas Device Sync to that app.",source:"@site/docs/0-prerequisites/build_app_workshop.mdx",sourceDirName:"0-prerequisites",slug:"/prerequisites/build_app_workshop",permalink:"/swiftui-atlas-sync-app-workshop/docs/prerequisites/build_app_workshop",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-sync-app-workshop/blob/main/docs/0-prerequisites/build_app_workshop.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Xcode 14",permalink:"/swiftui-atlas-sync-app-workshop/docs/prerequisites/xcode"},next:{title:"MongoDB Atlas",permalink:"/swiftui-atlas-sync-app-workshop/docs/category/mongodb-atlas"}},l={},s=[],c={toc:s},u="wrapper";function d(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,o.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"build-an-app-using-the-realm-sdk-to-store-data-locally"},"Build an App using the Realm SDK to store data locally"),(0,a.kt)("p",null,"This lab is based on the ",(0,a.kt)("a",{parentName:"p",href:"https://mongodb-developer.github.io/swiftui-realm-app-workshop/"},"SwiftUI Realm App Workshop")," where we build a simple habit-tracking app using SwiftUI and the Realm SDK. This app stores data locally and our objective now is to add Atlas Device Sync to that app. "),(0,a.kt)("p",null,"You can either:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"follow the lab "),(0,a.kt)("li",{parentName:"ul"},"grab the code cloning the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mongodb-developer/swiftui-realm-app-workshop"},"repo")," and navigating to the ",(0,a.kt)("a",{parentName:"li",href:"https://github.com/mongodb-developer/swiftui-realm-app-workshop/tree/main/GoodHabitsRealmApp"},"GoodHabitsRealmApp")," folder.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-shell"},"git clone https://github.com/mongodb-developer/swiftui-realm-app-workshop\ncd GoodHabitsRealmApp\nopen GoodHabitsRealmApp.xccodeproj\n")),(0,a.kt)("p",null,"And then compiling the App in Xcode."))}d.isMDXComponent=!0}}]);