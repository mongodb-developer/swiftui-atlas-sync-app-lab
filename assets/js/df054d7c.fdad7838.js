"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[103],{4497:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>p,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>l});var s=i(5893),t=i(1151),a=i(9524);const r={},c="Running the App",o={id:"ios-app-changes/running-app",title:"Running the App",description:"Launch in Simulator",source:"@site/docs/3--ios-app-changes/3-running-app.mdx",sourceDirName:"3--ios-app-changes",slug:"/ios-app-changes/running-app",permalink:"/swiftui-atlas-sync-app-lab/docs/ios-app-changes/running-app",draft:!1,unlisted:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-sync-app-lab/blob/main/docs/3--ios-app-changes/3-running-app.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"SyncContentView",permalink:"/swiftui-atlas-sync-app-lab/docs/ios-app-changes/synccontentview"},next:{title:"Flexible configuration",permalink:"/swiftui-atlas-sync-app-lab/docs/ios-app-changes/flexible-configuration"}},p={},l=[{value:"Launch in Simulator",id:"launch-in-simulator",level:2},{value:"Checking Users in App Services",id:"checking-users-in-app-services",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",img:"img",p:"p",...(0,t.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"running-the-app",children:"Running the App"}),"\n",(0,s.jsx)(n.h2,{id:"launch-in-simulator",children:"Launch in Simulator"}),"\n",(0,s.jsx)(n.p,{children:"If we run the app in our iOS Simulator, we'll see something like this:"}),"\n",(0,s.jsx)("img",{alt:"'iOS Simulator",src:(0,a.Z)("/img/3-app-startup/logged-in.png"),width:"300"}),"\n",(0,s.jsxs)(n.p,{children:["We're showing a ",(0,s.jsx)(n.code,{children:"Text"})," view with a ",(0,s.jsx)(n.code,{children:"RLMUser"}),". This means we've logged in."]}),"\n",(0,s.jsx)(n.h2,{id:"checking-users-in-app-services",children:"Checking Users in App Services"}),"\n",(0,s.jsx)(n.p,{children:"If we open the App Users option in App Services, we'll see that now we have one user created. As we've logged in from our app, a new anonymous user has been created. We can check this user actitivy, delete or disable the user, revoke all sessions and even check from which devices she is connecting!"}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:i(1668).Z+"",width:"1305",height:"465"})})]})}function h(e={}){const{wrapper:n}={...(0,t.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},1668:(e,n,i)=>{i.d(n,{Z:()=>s});const s=i.p+"assets/images/users-ca626154859815f5572f1b82875eae59.png"},1151:(e,n,i)=>{i.d(n,{Z:()=>c,a:()=>r});var s=i(7294);const t={},a=s.createContext(t);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);