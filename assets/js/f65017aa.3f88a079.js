"use strict";(self.webpackChunkswiftui_realm_app=self.webpackChunkswiftui_realm_app||[]).push([[736],{4137:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)n=l[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=a.createContext({}),s=function(e){var t=a.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=s(e.components);return a.createElement(c.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},f=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,l=e.originalType,c=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),d=s(n),f=r,m=d["".concat(c,".").concat(f)]||d[f]||u[f]||l;return n?a.createElement(m,i(i({ref:t},p),{},{components:n})):a.createElement(m,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var l=n.length,i=new Array(l);i[0]=f;var o={};for(var c in t)hasOwnProperty.call(t,c)&&(o[c]=t[c]);o.originalType=e,o[d]="string"==typeof e?e:r,i[1]=o;for(var s=2;s<l;s++)i[s]=n[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}f.displayName="MDXCreateElement"},6477:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>u,frontMatter:()=>l,metadata:()=>o,toc:()=>s});var a=n(7462),r=(n(7294),n(4137));const l={},i="Device Sync",o={unversionedId:"app-services/device-sync",id:"app-services/device-sync",title:"Device Sync",description:"We'll enable Device Sync, which will allow our app to send and read data from our MongoDB Atlas cluster, and Developer Mode, which will create the Collections, schemas, etc. for us.",source:"@site/docs/2-app-services/3-device-sync.mdx",sourceDirName:"2-app-services",slug:"/app-services/device-sync",permalink:"/swiftui-atlas-sync-app-workshop/docs/app-services/device-sync",draft:!1,editUrl:"https://github.com/mongodb-developer/swiftui-atlas-sync-app-workshop/blob/main/docs/2-app-services/3-device-sync.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Exploring the App",permalink:"/swiftui-atlas-sync-app-workshop/docs/app-services/exploring-the-app"},next:{title:"iOS App Changes",permalink:"/swiftui-atlas-sync-app-workshop/docs/category/ios-app-changes"}},c={},s=[{value:"Enable Device Sync",id:"enable-device-sync",level:2},{value:"Final settings",id:"final-settings",level:2},{value:"Confirm and add a Role",id:"confirm-and-add-a-role",level:2},{value:"Review Draft &amp; Deploy",id:"review-draft--deploy",level:2}],p={toc:s},d="wrapper";function u(e){let{components:t,...l}=e;return(0,r.kt)(d,(0,a.Z)({},p,l,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"device-sync"},"Device Sync"),(0,r.kt)("p",null,"We'll enable Device Sync, which will allow our app to send and read data from our MongoDB Atlas cluster, and Developer Mode, which will create the Collections, schemas, etc. for us."),(0,r.kt)("h2",{id:"enable-device-sync"},"Enable Device Sync"),(0,r.kt)("p",null,"Click on ",(0,r.kt)("inlineCode",{parentName:"p"},"Start Syncing"),". It will ask us if we want to generate a Schema. We don't want this, as the schema will be created for us automatically in Development Mode. So we click on ",(0,r.kt)("inlineCode",{parentName:"p"},"No thanks, continue to Sync"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(558).Z,width:"788",height:"479"})),(0,r.kt)("p",null,"Now we'll select:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Flexible Sync (more on that later)"),(0,r.kt)("li",{parentName:"ul"},"as a cluster, pick the one that you prefer"),(0,r.kt)("li",{parentName:"ul"},"Database name: we'll expand the drop down box and click on ",(0,r.kt)("inlineCode",{parentName:"li"},"Add new database"),", then insert a name for our Database. This won't be created until some data is inserted for real."),(0,r.kt)("li",{parentName:"ul"},"Configure Queryable Fields: we want to sync our data so each user can see her own data. For that, we'll add an ownerId field, so we can tell what data is from which user.")),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(2548).Z,width:"698",height:"231"})),(0,r.kt)("h2",{id:"final-settings"},"Final settings"),(0,r.kt)("p",null,"Your settings should look like these:"),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(263).Z,width:"698",height:"943"})),(0,r.kt)("h2",{id:"confirm-and-add-a-role"},"Confirm and add a Role"),(0,r.kt)("p",null,'Confirm Enable Sync. A window will appear asking us to select a role. We can define a custom one of choose among the preset roles. Select "User can read and write all data" and click on ',(0,r.kt)("inlineCode",{parentName:"p"},"Add default role"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{src:n(3462).Z,width:"584",height:"301"})),(0,r.kt)("h2",{id:"review-draft--deploy"},"Review Draft & Deploy"),(0,r.kt)("p",null,"As always, changes only take place when we deploy them. Do it now."))}u.isMDXComponent=!0},3462:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/default-role-812b24ef0fb3c4f5342e15628237d893.png"},558:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/enable-sync-d3480cab215b11b42f786cfd92c9089e.png"},2548:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/queryable-fields-ac5da043bf2e11c1bc136c00c3b9d671.png"},263:(e,t,n)=>{n.d(t,{Z:()=>a});const a=n.p+"assets/images/settings-a0e97d009816d9ab2e6acbc5ddad3b6e.png"}}]);